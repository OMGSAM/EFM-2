class IR :
    def __init__(self,taux,tranches) :
        self.taux=taux
        self.tranches=tranches
    def getIR(salaire) :
        a=salaire*12
        if a<30000 :
            return 0/100
        if a>30001 and a<50000 : 
            return 10/100
         if a>50001 and a<60000 :
            return 20/100
         if a>60001 and a<80000 :
            return 30/100
         if a>80001 and a<180000 :
            return 34/100
         else :
            return 38/100
    
class Iemploye :
    
    
    def age(self)
            pass
    def anciennete(self)
            pass
    def ageretraite(self)
            pass
    

class employe() :
    mtle=0
    def __init__(self,nom,datembauche,datenaisance,salaire) :
        self._nom=nom  
        self._salaire= salaire
        self._datenaisance= datenaisance
        self._datembauche= datembauche
        employe.mtle+=1

    def getnom(self) :
         return    self._nom
    def getsalary(self) :
         return    self._salaire    
    def getbirthday(self) :
         return   self._datenaisance
    def getpri(self) :
         return    self._datembauche  
    def setbirthday(self,l) :
             self._datenaisance=l
    def setembauche(self,n) :
              self._datembauche=n     
         
          
   def equals(self,m) :
        if self.mtle== m.mtle :
               return True
        else :
              return False
   def __str__(self):
         return self.__dict__
         
    
    
    
       
 

class formateur(employe) : 
    mtle=0
    tarif=0
    def __init__(self,nom,datembauche,datenaisance,salaire,heuresup) :
        super().__init__(nom,datembauche,datenaisance,salaire)
        self._heuresup=heuresup
        formateur.mtle+=1
        formateur.tarif=70DH

        
    def getsup(self) :
         return  self._heuresup
    def setheure(self,w) :
          self._heuresup=w

    

    def getnbrmtle(self) :
       return formateur.mtle

     
    def tostring(self):
         return self.__dict__
         
class agent(employe) :  
    mtle=0
    def __init__(self,nom,datembauche,datenaisance,salaire,prime) :
        super().__init__(nom,datembauche,datenaisance,salaire)
        self._prime=prime
        agent.mtle+=1
        

    def equals(self,m) :
        if self.mtle== m.mtle :
               return True
        else :
              return False

    def getprime(self) :
         return self._prime    
    

    def setprime(self ,z) :
        self._prime =z
    
    def getnbrmtle(self) :
        return agent.mtle

    

     
    def tostring(self):
         return self.__dict__         
         
         
 
